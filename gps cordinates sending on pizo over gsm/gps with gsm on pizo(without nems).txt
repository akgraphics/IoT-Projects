
#include <TinyGPS.h>

#include <SoftwareSerial.h>
SoftwareSerial Gsm(10,11);
char phone_no[] = "+919766935880"; //replace with phone no. to get sms
TinyGPS gps;  //Creates a new instance of the TinyGPS object
    
    boolean sens=false;
int knockSensor = 0;               
byte val = 0;
int THRESHOLD = 100;


void setup() {
 Serial.begin(9600);
  Gsm.begin(9600);  

}

void loop() 
{

  val = analogRead(knockSensor);     

  if (val >= THRESHOLD) 
{
    Serial.println("Accident Detected"); 
    Serial.println("Are u Safe"); 
    Serial.println("Press Reset within 20sec"); 
    delay(20000);
  sens=true;
 }

  delay(100);  // we have to make a delay to avoid overloading the serial port

if(sens==true)
{
   // Serial.println("sens true");
   
bool newData = false;
  unsigned long chars;
  unsigned short sentences, failed;

  // For one second we parse GPS data and report some key values

  for (unsigned long start = millis(); millis() - start < 1000;)

  {

    while (Serial.available())

    {
      char c = Serial.read();
      Serial.print(c);
      if (gps.encode(c))
        newData = true;  

    }

  }

  if (newData)      //If newData is true
  {
    float flat, flon;
    unsigned long age;
    gps.f_get_position(&flat, &flon, &age);
    Gsm.print("AT+CMGF=1\r");
    //Serial.print("Hre");
    delay(400);
    Gsm.print("AT+CMGS=\"");
    Gsm.print(phone_no);
    Gsm.println("\"");

    delay(300);
    Gsm.print("http://maps.google.com/maps?q=loc:");
   // Gsm.print("Latitude = ");
    Gsm.print(flat == TinyGPS::GPS_INVALID_F_ANGLE ? 0.0 : flat, 6);
    //Gsm.print(" Longitude = ");
    Gsm.print(",");
    Gsm.print(flon == TinyGPS::GPS_INVALID_F_ANGLE ? 0.0 : flon, 6);
    delay(200);
    Gsm.println((char)26); // End AT command with a ^Z, ASCII code 26
    delay(200);
    Gsm.println();
    delay(200000);
  }

  Serial.println(failed);
 // if (chars == 0)
   // Serial.println("** No characters received from GPS: check wiring **");
}

    
}


